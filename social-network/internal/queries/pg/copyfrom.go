// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: copyfrom.go

package pg

import (
	"context"
)

// iteratorForUsersMassCreate implements pgx.CopyFromSource.
type iteratorForUsersMassCreate struct {
	rows                 []UsersMassCreateParams
	skippedFirstNextCall bool
}

func (r *iteratorForUsersMassCreate) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForUsersMassCreate) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].PasswordHash,
		r.rows[0].FirstName,
		r.rows[0].SecondName,
		r.rows[0].BirthDate,
		r.rows[0].Gender,
		r.rows[0].Biography,
		r.rows[0].City,
	}, nil
}

func (r iteratorForUsersMassCreate) Err() error {
	return nil
}

func (q *Queries) UsersMassCreate(ctx context.Context, arg []UsersMassCreateParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"user"}, []string{"id", "password_hash", "first_name", "second_name", "birth_date", "gender", "biography", "city"}, &iteratorForUsersMassCreate{rows: arg})
}
